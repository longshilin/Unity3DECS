//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity interactDemoMouseEntity { get { return GetGroup(InputMatcher.InteractDemoMouse).GetSingleEntity(); } }
    public InteractDemo.MouseComponent interactDemoMouse { get { return interactDemoMouseEntity.interactDemoMouse; } }
    public bool hasInteractDemoMouse { get { return interactDemoMouseEntity != null; } }

    public InputEntity SetInteractDemoMouse(Enums.MouseButton newMouseButton, Enums.MouseButtonEvent newMouseEvent) {
        if (hasInteractDemoMouse) {
            throw new Entitas.EntitasException("Could not set InteractDemoMouse!\n" + this + " already has an entity with InteractDemo.MouseComponent!",
                "You should check if the context already has a interactDemoMouseEntity before setting it or use context.ReplaceInteractDemoMouse().");
        }
        var entity = CreateEntity();
        entity.AddInteractDemoMouse(newMouseButton, newMouseEvent);
        return entity;
    }

    public void ReplaceInteractDemoMouse(Enums.MouseButton newMouseButton, Enums.MouseButtonEvent newMouseEvent) {
        var entity = interactDemoMouseEntity;
        if (entity == null) {
            entity = SetInteractDemoMouse(newMouseButton, newMouseEvent);
        } else {
            entity.ReplaceInteractDemoMouse(newMouseButton, newMouseEvent);
        }
    }

    public void RemoveInteractDemoMouse() {
        interactDemoMouseEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public InteractDemo.MouseComponent interactDemoMouse { get { return (InteractDemo.MouseComponent)GetComponent(InputComponentsLookup.InteractDemoMouse); } }
    public bool hasInteractDemoMouse { get { return HasComponent(InputComponentsLookup.InteractDemoMouse); } }

    public void AddInteractDemoMouse(Enums.MouseButton newMouseButton, Enums.MouseButtonEvent newMouseEvent) {
        var index = InputComponentsLookup.InteractDemoMouse;
        var component = (InteractDemo.MouseComponent)CreateComponent(index, typeof(InteractDemo.MouseComponent));
        component.MouseButton = newMouseButton;
        component.MouseEvent = newMouseEvent;
        AddComponent(index, component);
    }

    public void ReplaceInteractDemoMouse(Enums.MouseButton newMouseButton, Enums.MouseButtonEvent newMouseEvent) {
        var index = InputComponentsLookup.InteractDemoMouse;
        var component = (InteractDemo.MouseComponent)CreateComponent(index, typeof(InteractDemo.MouseComponent));
        component.MouseButton = newMouseButton;
        component.MouseEvent = newMouseEvent;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractDemoMouse() {
        RemoveComponent(InputComponentsLookup.InteractDemoMouse);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherInteractDemoMouse;

    public static Entitas.IMatcher<InputEntity> InteractDemoMouse {
        get {
            if (_matcherInteractDemoMouse == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.InteractDemoMouse);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherInteractDemoMouse = matcher;
            }

            return _matcherInteractDemoMouse;
        }
    }
}
