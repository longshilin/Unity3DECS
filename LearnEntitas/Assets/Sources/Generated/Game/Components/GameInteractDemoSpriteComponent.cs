//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InteractDemo.SpriteComponent interactDemoSprite { get { return (InteractDemo.SpriteComponent)GetComponent(GameComponentsLookup.InteractDemoSprite); } }
    public bool hasInteractDemoSprite { get { return HasComponent(GameComponentsLookup.InteractDemoSprite); } }

    public void AddInteractDemoSprite(string newSpriteName) {
        var index = GameComponentsLookup.InteractDemoSprite;
        var component = (InteractDemo.SpriteComponent)CreateComponent(index, typeof(InteractDemo.SpriteComponent));
        component.SpriteName = newSpriteName;
        AddComponent(index, component);
    }

    public void ReplaceInteractDemoSprite(string newSpriteName) {
        var index = GameComponentsLookup.InteractDemoSprite;
        var component = (InteractDemo.SpriteComponent)CreateComponent(index, typeof(InteractDemo.SpriteComponent));
        component.SpriteName = newSpriteName;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractDemoSprite() {
        RemoveComponent(GameComponentsLookup.InteractDemoSprite);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractDemoSprite;

    public static Entitas.IMatcher<GameEntity> InteractDemoSprite {
        get {
            if (_matcherInteractDemoSprite == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractDemoSprite);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractDemoSprite = matcher;
            }

            return _matcherInteractDemoSprite;
        }
    }
}
