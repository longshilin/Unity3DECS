//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InteractDemo.MoveComponent interactDemoMove { get { return (InteractDemo.MoveComponent)GetComponent(GameComponentsLookup.InteractDemoMove); } }
    public bool hasInteractDemoMove { get { return HasComponent(GameComponentsLookup.InteractDemoMove); } }

    public void AddInteractDemoMove(UnityEngine.Vector3 newTargetPos) {
        var index = GameComponentsLookup.InteractDemoMove;
        var component = (InteractDemo.MoveComponent)CreateComponent(index, typeof(InteractDemo.MoveComponent));
        component.TargetPos = newTargetPos;
        AddComponent(index, component);
    }

    public void ReplaceInteractDemoMove(UnityEngine.Vector3 newTargetPos) {
        var index = GameComponentsLookup.InteractDemoMove;
        var component = (InteractDemo.MoveComponent)CreateComponent(index, typeof(InteractDemo.MoveComponent));
        component.TargetPos = newTargetPos;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractDemoMove() {
        RemoveComponent(GameComponentsLookup.InteractDemoMove);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractDemoMove;

    public static Entitas.IMatcher<GameEntity> InteractDemoMove {
        get {
            if (_matcherInteractDemoMove == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractDemoMove);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractDemoMove = matcher;
            }

            return _matcherInteractDemoMove;
        }
    }
}
