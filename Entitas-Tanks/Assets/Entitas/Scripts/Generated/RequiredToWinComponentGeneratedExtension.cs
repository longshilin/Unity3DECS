//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public RequiredToWinComponent requiredToWin { get { return (RequiredToWinComponent)GetComponent(ComponentIds.RequiredToWin); } }

        public bool hasRequiredToWin { get { return HasComponent(ComponentIds.RequiredToWin); } }

        public Entity AddRequiredToWin(int newValue) {
            var component = CreateComponent<RequiredToWinComponent>(ComponentIds.RequiredToWin);
            component.value = newValue;
            return AddComponent(ComponentIds.RequiredToWin, component);
        }

        public Entity ReplaceRequiredToWin(int newValue) {
            var component = CreateComponent<RequiredToWinComponent>(ComponentIds.RequiredToWin);
            component.value = newValue;
            ReplaceComponent(ComponentIds.RequiredToWin, component);
            return this;
        }

        public Entity RemoveRequiredToWin() {
            return RemoveComponent(ComponentIds.RequiredToWin);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherRequiredToWin;

        public static IMatcher RequiredToWin {
            get {
                if (_matcherRequiredToWin == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.RequiredToWin);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherRequiredToWin = matcher;
                }

                return _matcherRequiredToWin;
            }
        }
    }
}
